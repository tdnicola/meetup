{"version":3,"sources":["components/Event.js","mockData/mockData.js","components/EventList.js","components/api.js","components/CitySearch.js","components/NumberOfEvents.js","App.js","serviceWorker.js","index.js"],"names":["Event","state","showDetails","events","handleChange","_this","setState","event","this","props","react_default","a","createElement","className","name","local_date","onClick","venue","status","Component","mockData","city","id","lat","lon","country","zip","member_count","created","duration","date_in_series_pattern","time","local_time","updated","utc_offset","waitlist_count","yes_rsvp_count","repinned","address_1","localized_country_name","group","join_mode","urlname","who","localized_location","region","timezone","link","description","how_to_find_us","visibility","pro_is_email_shared","member_pay_fee","rsvp_limit","rsvp_close_offset","EventList","map","key","components_Event","_callee","query","token","url","result","regenerator_default","wrap","_context","prev","next","window","location","href","startsWith","abrupt","name_string","getAccessToken","sent","axios","get","data","stop","_callee2","_context2","getOrRenewAccessToken","_callee3","type","tokenInfo","_context3","localStorage","setItem","access_token","refresh_token","Date","now","getItem","code","URLSearchParams","search","CitySearch","suggestions","handleInputChanged","value","target","getSuggestions","then","handleItemClicked","updateEvents","_this2","input","onChange","item","NumberOfEvents","numberQuery","placeholder","App","getEvents","components_CitySearch","components_EventList","components_NumberOfEvents","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"8PAoCeA,oNAjCbC,MAAQ,CACNC,aAAa,EACbC,OAAQ,MAIVC,aAAe,WACbC,EAAKC,SAAS,CAAEJ,aAAcG,EAAKJ,MAAMC,uFAMzC,IAAMK,EAAQC,KAAKC,MAAMF,MAEzB,OACIG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaN,EAAMO,MAChCJ,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,SAAmCN,EAAMQ,YACzCL,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAAcG,QAASR,KAAKJ,cAA9C,gBAECI,KAAKP,MAAMC,aACVQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAf,UAAoCN,EAAMU,MAAMH,MAChDJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,WAAsCN,EAAMW,iBAzBxCC,cCFdC,EAAW,CACfC,KAAM,CACJC,GAAI,MACJD,KAAM,SACNE,IAAK,KACLC,KAAM,OACNvB,MAAO,KACPwB,QAAS,KACTC,IAAK,QACLC,aAAc,OAEhBxB,OAAQ,CACN,CACEyB,QAAS,aACTC,SAAU,MACVP,GAAI,YACJR,KAAM,gCACNgB,wBAAwB,EACxBZ,OAAQ,WACRa,KAAM,WACNhB,WAAY,aACZiB,WAAY,QACZC,QAAS,aACTC,YAAa,MACbC,eAAgB,EAChBC,eAAgB,GAChBnB,MAAO,CACLK,GAAI,QACJR,KAAM,YACNS,IAAK,kBACLC,KAAM,mBACNa,UAAU,EACVC,UAAW,uBACXjB,KAAM,SACNI,QAAS,KACTc,uBAAwB,MACxBb,IAAK,QACLzB,MAAO,MAETuC,MAAO,CACLZ,QAAS,aACTd,KAAM,kBACNQ,GAAI,QACJmB,UAAW,OACXlB,IAAK,kBACLC,KAAM,mBACNkB,QAAS,gBACTC,IAAK,mBACLC,mBAAoB,aACpB3C,MAAO,KACPwB,QAAS,KACToB,OAAQ,QACRC,SAAU,eAEZC,KAAM,yDACNC,YAAa,0xKACbC,eAAgB,mHAChBC,WAAY,SACZC,qBAAqB,EACrBC,gBAAgB,GAElB,CACExB,QAAS,aACTC,SAAU,MACVP,GAAI,eACJR,KAAM,4BACNgB,wBAAwB,EACxBZ,OAAQ,WACRa,KAAM,WACNhB,WAAY,aACZiB,WAAY,QACZC,QAAS,aACTC,YAAa,MACbC,eAAgB,EAChBC,eAAgB,IAChBnB,MAAO,CACLK,GAAI,SACJR,KAAM,cACNS,IAAK,kBACLC,KAAM,iBACNa,UAAU,EACVC,UAAW,2BACXjB,KAAM,SACNI,QAAS,KACTc,uBAAwB,MACxBb,IAAK,QACLzB,MAAO,MAETuC,MAAO,CACLZ,QAAS,aACTd,KAAM,qBACNQ,GAAI,SACJmB,UAAW,OACXlB,IAAK,mBACLC,KAAM,mBACNkB,QAAS,qBACTC,IAAK,cACLC,mBAAoB,aACpB3C,MAAO,KACPwB,QAAS,KACToB,OAAQ,QACRC,SAAU,eAEZC,KAAM,iEACNC,YAAa,6pBACbC,eAAgB,wGAChBC,WAAY,SACZE,gBAAgB,GAElB,CACExB,QAAS,YACTC,SAAU,KACVP,GAAI,eACJR,KAAM,4BACNuC,WAAY,GACZvB,wBAAwB,EACxBZ,OAAQ,WACRa,KAAM,WACNhB,WAAY,aACZiB,WAAY,QACZsB,kBAAmB,OACnBrB,QAAS,YACTC,YAAa,MACbC,eAAgB,EAChBC,eAAgB,EAChBnB,MAAO,CACLK,GAAI,SACJR,KAAM,iCACNS,IAAK,kBACLC,KAAM,mBACNa,UAAU,EACVC,UAAW,oBACXjB,KAAM,SACNI,QAAS,KACTc,uBAAwB,MACxBb,IAAK,QACLzB,MAAO,MAETuC,MAAO,CACLZ,QAAS,aACTd,KAAM,0CACNQ,GAAI,SACJmB,UAAW,OACXlB,IAAK,mBACLC,KAAM,kBACNkB,QAAS,0CACTC,IAAK,UACLC,mBAAoB,gBACpB3C,MAAO,KACPwB,QAAS,KACToB,OAAQ,QACRC,SAAU,eAEZC,KAAM,sFACNC,YAAa,izBACbC,eAAgB,mCAChBC,WAAY,SACZE,gBAAgB,GAElB,CACExB,QAAS,aACTC,SAAU,MACVP,GAAI,eACJR,KAAM,uEACNgB,wBAAwB,EACxBZ,OAAQ,WACRa,KAAM,UACNhB,WAAY,aACZiB,WAAY,QACZC,QAAS,aACTC,YAAa,MACbC,eAAgB,EAChBC,eAAgB,GAChBnB,MAAO,CACLK,GAAI,QACJR,KAAM,YACNS,IAAK,kBACLC,KAAM,mBACNa,UAAU,EACVC,UAAW,uBACXjB,KAAM,SACNI,QAAS,KACTc,uBAAwB,MACxBb,IAAK,QACLzB,MAAO,MAETuC,MAAO,CACLZ,QAAS,aACTd,KAAM,iBACNQ,GAAI,QACJmB,UAAW,OACXlB,IAAK,MACLC,KAAM,mBACNkB,QAAS,gBACTC,IAAK,yBACLC,mBAAoB,aACpB3C,MAAO,KACPwB,QAAS,KACToB,OAAQ,QACRC,SAAU,eAEZC,KAAM,4DACNC,YAAa,soCACbC,eAAgB,wEAChBC,WAAY,SACZE,gBAAgB,GAElB,CACExB,QAAS,YACTC,SAAU,MACVP,GAAI,eACJR,KAAM,gCACNgB,wBAAwB,EACxBZ,OAAQ,WACRa,KAAM,WACNhB,WAAY,aACZiB,WAAY,QACZC,QAAS,aACTC,YAAa,MACbC,eAAgB,EAChBC,eAAgB,EAChBnB,MAAO,CACLK,GAAI,QACJR,KAAM,YACNS,IAAK,kBACLC,KAAM,mBACNa,UAAU,EACVC,UAAW,uBACXjB,KAAM,SACNI,QAAS,KACTc,uBAAwB,MACxBb,IAAK,QACLzB,MAAO,MAETuC,MAAO,CACLZ,QAAS,aACTd,KAAM,kBACNQ,GAAI,QACJmB,UAAW,OACXlB,IAAK,kBACLC,KAAM,mBACNkB,QAAS,gBACTC,IAAK,mBACLC,mBAAoB,aACpB3C,MAAO,KACPwB,QAAS,KACToB,OAAQ,QACRC,SAAU,eAEZC,KAAM,4DACNC,YAAa,0xKACbC,eAAgB,mHAChBC,WAAY,SACZC,qBAAqB,EACrBC,gBAAgB,KCrOPG,mLAfX,OACE7C,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aACXL,KAAKC,MAAMN,OAAOqD,IAAI,SAAAjD,GAAK,OAG1BG,EAAAC,EAAAC,cAAA,MAAI6C,IAAKlD,EAAMe,IACbZ,EAAAC,EAAAC,cAAC8C,EAAD,CAAOnD,MAAOA,eAZFY,+FCDxB,SAAAwC,EAA8BC,GAA9B,IAAAC,EAAAC,EAAAC,EAAA,OAAAC,EAAArD,EAAAsD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WACKC,OAAOC,SAASC,KAAKC,WAAW,oBADrC,CAAAN,EAAAE,KAAA,eAAAF,EAAAO,OAAA,SAES,CACH,CACEpD,KAAM,SACNI,QAAS,KACTc,uBAAwB,MACxBtC,MAAO,KACPyE,YAAa,wBACbhD,IAAK,QACLH,IAAK,KACLC,KAAM,QAER,CACEH,KAAM,SACNI,QAAS,KACTc,uBAAwB,MACxBtC,MAAO,KACPyE,YAAa,8BACbhD,IAAK,QACLH,IAAK,MACLC,KAAM,OAER,CACEH,KAAM,SACNI,QAAS,KACTc,uBAAwB,MACxBtC,MAAO,KACPyE,YAAa,4BACbhD,IAAK,QACLH,IAAK,MACLC,KAAM,SA/Bd,cAAA0C,EAAAE,KAAA,EAoCsBO,IApCtB,YAoCQd,EApCRK,EAAAU,MAAA,CAAAV,EAAAE,KAAA,gBAsCUN,EAAM,4EACVF,EACA,gBAAkBC,EAxCxBK,EAAAE,KAAA,EAyCyBS,IAAMC,IAAIhB,GAzCnC,cAyCUC,EAzCVG,EAAAU,KAAAV,EAAAO,OAAA,SA0CWV,EAAOgB,MA1ClB,eAAAb,EAAAO,OAAA,SA4CS,IA5CT,yBAAAP,EAAAc,SAAArB,wEA+CA,SAAAsB,EAAyB1D,EAAKC,GAA9B,IAAAqC,EAAAC,EAAAC,EAAA,OAAAC,EAAArD,EAAAsD,KAAA,SAAAiB,GAAA,cAAAA,EAAAf,KAAAe,EAAAd,MAAA,WACMC,OAAOC,SAASC,KAAKC,WAAW,oBADtC,CAAAU,EAAAd,KAAA,eAAAc,EAAAT,OAAA,SAEWrD,EAASjB,QAFpB,cAAA+E,EAAAd,KAAA,EAKsBO,IALtB,YAKQd,EALRqB,EAAAN,MAAA,CAAAM,EAAAd,KAAA,gBAOQN,EAAM,yFAAgGD,EAEtGtC,GAAOC,IACTsC,GAAO,QAAUvC,EAAM,QAAUC,GAVvC0D,EAAAd,KAAA,GAYyBS,IAAMC,IAAIhB,GAZnC,eAYUC,EAZVmB,EAAAN,KAAAM,EAAAT,OAAA,SAaWV,EAAOgB,KAAK5E,QAbvB,yBAAA+E,EAAAF,SAAAC,sCAkBeE,iFAAf,SAAAC,EAAqCC,EAAM5B,GAA3C,IAAAK,EAAAwB,EAAA,OAAAtB,EAAArD,EAAAsD,KAAA,SAAAsB,GAAA,cAAAA,EAAApB,KAAAoB,EAAAnB,MAAA,aAEe,QAATiB,EAEFvB,EAAM,wEAA0EL,EAC9D,UAAT4B,IACTvB,EAAM,0EAA4EL,GANtF8B,EAAAnB,KAAA,EASwBS,IAAMC,IAAIhB,GATlC,cASMwB,EATNC,EAAAX,KAYAY,aAAaC,QAAQ,eAAgBH,EAAUP,KAAKW,cACpDF,aAAaC,QAAQ,gBAAiBH,EAAUP,KAAKY,eACrDH,aAAaC,QAAQ,kBAAmBG,KAAKC,OAd7CN,EAAAd,OAAA,SAiBOa,EAAUP,KAAKW,cAjBtB,wBAAAH,EAAAP,SAAAI,6BAqBA,SAAST,IAGP,IAFoBa,aAAaM,QAAQ,gBAEvB,CAChB,IACMC,EADe,IAAIC,gBAAgB3B,OAAOC,SAAS2B,QAC/BnB,IAAI,QAE9B,OAAKiB,EAIEZ,EAAsB,MAAOY,IAHlC1B,OAAOC,SAASC,KAAO,oJAChB,MAMX,OAAOY,EAAsB,QADRK,aAAaM,QAAQ,sBChE7BI,6MAnCbjG,MAAQ,CACN2D,MAAO,GACPuC,YAAa,MAGfC,mBAAqB,SAAC7F,GACpB,IAAM8F,EAAQ9F,EAAM+F,OAAOD,MAC3BhG,EAAKC,SAAS,CAAEsD,MAAOyC,+CACvBE,CAAeF,GAAOG,KAAK,SAAAL,GAAW,OAAI9F,EAAKC,SAAS,CAAE6F,qBAG5DM,kBAAoB,SAACJ,EAAO9E,EAAKC,GAC/BnB,EAAKC,SAAS,CAAEsD,MAAOyC,EAAOF,YAAa,KAC3C9F,EAAKI,MAAMiG,aAAanF,EAAKC,4EAGtB,IAAAmF,EAAAnG,KACP,OACIE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAEbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,OAAO+F,MAAM,OAAOP,MAAO7F,KAAKP,MAAM2D,MAAOiD,SAAUrG,KAAK4F,qBAC7E1F,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eACXL,KAAKP,MAAMkG,YAAY3C,IAAI,SAAAsD,GAAI,OAC9BpG,EAAAC,EAAAC,cAAA,MAAI6C,IAAKqD,EAAKpC,YAAa1D,QAAS,kBAAM2F,EAAKF,kBAAkBK,EAAKpC,YAAaoC,EAAKvF,IAAKuF,EAAKtF,OAC/FsF,EAAKpC,wBAzBGvD,aC6BV4F,6MA5BX9G,MAAQ,CACJ+G,YAAa,MAGjB5G,aAAe,SAACG,GACZ,IAAM8F,EAAQ9F,EAAM+F,OAAOD,MAC3BhG,EAAKC,SAAS,CAAE0G,YAAaX,6EAK7B,OACI3F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,SACIC,UAAU,oBACVwE,KAAK,SACLwB,SAAUrG,KAAKJ,aACfiG,MAAO7F,KAAKP,MAAM+G,YAElBC,YAAY,OAEhBvG,EAAAC,EAAAC,cAAA,8BAxBaO,aCgCd+F,6MAtBbjH,MAAQ,CACNE,OAAQ,MAGZuG,aAAe,SAACnF,EAAKC,kDACjB2F,CAAU5F,EAAKC,GAAKgF,KAAK,SAAArG,GAAM,OAAIE,EAAKC,SAAS,CAAEH,sFAMnD,OACEO,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACwG,EAAD,CAAYV,aAAclG,KAAKkG,eAC/BhG,EAAAC,EAAAC,cAACyG,EAAD,CAAWlH,OAAQK,KAAKP,MAAME,SAE9BO,EAAAC,EAAAC,cAAC0G,EAAD,cAlBUnG,aCEEoG,QACW,cAA7BlD,OAAOC,SAASkD,UAEe,UAA7BnD,OAAOC,SAASkD,UAEhBnD,OAAOC,SAASkD,SAASC,MACvB,2DCZNC,IAASC,OAAOjH,EAAAC,EAAAC,cAACgH,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMzB,KAAK,SAAA0B,GACjCA,EAAaC","file":"static/js/main.b1db2e1f.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Event extends Component {\n  state = {\n    showDetails: false,\n    events: []\n  }\n\n  \n  handleChange = () => {\n    this.setState({ showDetails: !this.state.showDetails })\n  }\n  \n  render() {\n\n    // const { event } = this.props\n    const event = this.props.event;\n\n    return (\n        <div className='event' >\n            <div className='eventName'>{event.name}</div>\n              <span className='eventDate'>Date: {event.local_date}</span>\n              <button className='eventButton' onClick={this.handleChange}>more details</button>\n\n              {this.state.showDetails && (\n                <div className='eventDetails'>\n                <div className='eventVenue'>Venue: {event.venue.name}</div> \n                <div className='eventStatus'>Status: {event.status}</div>    \n                </div>            \n              )}\n\n            </div>\n    );\n  }\n}\n\nexport default Event;","const mockData = {\n  city: {\n    id: 80201,\n    city: 'Denver',\n    lat: 39.7,\n    lon: -105.08,\n    state: 'CO',\n    country: 'us',\n    zip: '80201',\n    member_count: 48435\n  },\n  events: [\n    {\n      created: 1558282293000,\n      duration: 10800000,\n      id: '261592813',\n      name: 'New & Returning Members Night',\n      date_in_series_pattern: false,\n      status: 'upcoming',\n      time: 1567468800000,\n      local_date: '2019-09-02',\n      local_time: '18:00',\n      updated: 1560897088000,\n      utc_offset: -21600000,\n      waitlist_count: 0,\n      yes_rsvp_count: 16,\n      venue: {\n        id: 9942932,\n        name: 'Galvanize',\n        lat: 39.73353576660156,\n        lon: -104.99261474609375,\n        repinned: true,\n        address_1: '1062 Delaware Street',\n        city: 'Denver',\n        country: 'us',\n        localized_country_name: 'USA',\n        zip: '80204',\n        state: 'CO'\n      },\n      group: {\n        created: 1354586857000,\n        name: 'Code for Denver',\n        id: 6104442,\n        join_mode: 'open',\n        lat: 39.72999954223633,\n        lon: -104.94999694824219,\n        urlname: 'CodeForDenver',\n        who: 'Civic Innovators',\n        localized_location: 'Denver, CO',\n        state: 'CO',\n        country: 'us',\n        region: 'en_US',\n        timezone: 'US/Mountain'\n      },\n      link: 'https://www.meetup.com/CodeForDenver/events/261592813/',\n      description: '<p>New &amp; Returning Members Night is where we welcome any new members to Code for Denver and where any returning members can continue working with their team on projects.</p> <p>If you’re a new member, or curious about joining Code for Denver, there will be an onboarding session at this night. If you want to get a head start, follow our self onboarding below.</p> <p>You can learn more about Code for Denver, including our open projects, at www.codefordenver.org.<br/>∙<br/>∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙♦♦♦∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙<br/>∙<br/>CODE OF CONDUCT<br/>──────────────<br/>Code for Denver is a safe place to gather, free from harassment and everyone is welcome who embraces diversity, a culture of learning, and is respectful of others and their opinions.</p> <p>This event follows Code for Denver’s Code of Conduct, please read it before attending.</p> <p>If you have any concerns, please contact [masked]<br/>∙<br/>∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙♦♦♦∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙<br/>∙<br/>FAQ<br/>───<br/>There is a full FAQ posted on our GitHub, but here are some highlights we think are important.</p> <p>Where is Galvanize, and where do I park?<br/>--------------------------------------------------<br/>Galvanize is at 1062 Delaware St. on the corner of W 11th Ave and Delaware Street in the Golden Triangle neighborhood of Denver.</p> <p>There’s ample street parking all around, both 2 hour and metered parking should be free of charge and time limit during our meetings. Galvanize is marked by the red pin, and dark grey box.</p> <p>What do I need to bring to my first meetup?<br/>--------------------------------------------------<br/>We will have you create some accounts both on our site and for the technology we use, so a laptop or a smartphone will be useful.</p> <p>I\\'m a beginner programmer. Can I still get involved?<br/>--------------------------------------------------<br/>Yes! Many of our members have been beginning programmers who have found the environment helpful to improve their abilities while also working on real world problems and providing value.</p> <p>I\\'m not a programmer or interested in programming. Can I still get involved?<br/>--------------------------------------------------<br/>Yes! Helping solve challenges in the community takes more than programming expertise. Our brigade volunteers also have backgrounds in marketing, design, sales, facilitation, nonprofits, project management, and more. Additional perspectives and experiences are always valued and welcome.</p> <p>What is Code for Denver current working on?<br/>--------------------------------------------------<br/>We have multiple teams working on many different projects at completely different stages. You can find the list, including general descriptions, status, skills needed, and more at our Current Projects page on the website.</p> <p>Who can I contact for additional questions?<br/>--------------------------------------------------<br/>Get in touch with our organizers via our Meetup site or drop us a line at [masked]<br/>∙<br/>∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙♦♦♦∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙<br/>∙<br/>USEFUL LINKS<br/>──────────<br/>► ',\n      how_to_find_us: 'There is generally a sign pointing out which room we are in. If you can\\'t find us, ask the Galvanize front desk.',\n      visibility: 'public',\n      pro_is_email_shared: false,\n      member_pay_fee: false\n    },\n    {\n      created: 1512747817000,\n      duration: 10800000,\n      id: 'cxnkgryzlbrb',\n      name: 'August Develop Happy Hour',\n      date_in_series_pattern: false,\n      status: 'upcoming',\n      time: 1565913600000,\n      local_date: '2019-08-15',\n      local_time: '18:00',\n      updated: 1565378564000,\n      utc_offset: -21600000,\n      waitlist_count: 0,\n      yes_rsvp_count: 100,\n      venue: {\n        id: 26226878,\n        name: 'Big Trouble',\n        lat: 39.76924133300781,\n        lon: -104.977294921875,\n        repinned: false,\n        address_1: '3501 Wazee St Suite #100',\n        city: 'Denver',\n        country: 'us',\n        localized_country_name: 'USA',\n        zip: '80216',\n        state: 'CO'\n      },\n      group: {\n        created: 1439225694000,\n        name: 'Develop Happy Hour',\n        id: 18819666,\n        join_mode: 'open',\n        lat: 39.900001525878906,\n        lon: -104.94999694824219,\n        urlname: 'Develop-Happy-Hour',\n        who: 'Cultivators',\n        localized_location: 'Denver, CO',\n        state: 'CO',\n        country: 'us',\n        region: 'en_US',\n        timezone: 'US/Mountain'\n      },\n      link: 'https://www.meetup.com/Develop-Happy-Hour/events/cxnkgryzlbrb/',\n      description: '<p>August will be a special edition! We\\'ll be merging with the DVLP DNVR 2019 conference Opening Happy Hour to become the ultimate power of happy hours! Don\\'t worry no conference badge is required. Come mingle hear about what people learned at the conference and make connections.</p> <p>Come hang out with fellow members of the growing Denver/Boulder tech scene. Everyone is welcome. Come to learn, make contacts or discuss your latest project. No speaker, no agenda, no code knowledge necessary, just drinks.</p> <p>Monthly Happy Hour. We are always open to suggestions for new venues to host the happy hour. Please feel free to message the us with any ideas.</p> ',\n      how_to_find_us: 'We\\'ll be at Big Trouble, the bar on the second floor in the middle of the Zeppelin Station food hall.',\n      visibility: 'public',\n      member_pay_fee: false\n    },\n    {\n      created: 1560289420000,\n      duration: 3600000,\n      id: 'tnvdcryzlbkc',\n      name: 'Technology Partners Lunch',\n      rsvp_limit: 25,\n      date_in_series_pattern: false,\n      status: 'upcoming',\n      time: 1566928800000,\n      local_date: '2019-08-27',\n      local_time: '12:00',\n      rsvp_close_offset: 'PT1M',\n      updated: 1560289420000,\n      utc_offset: -21600000,\n      waitlist_count: 0,\n      yes_rsvp_count: 7,\n      venue: {\n        id: 26038353,\n        name: 'Tap & Burger Belleview Station',\n        lat: 39.62522888183594,\n        lon: -104.90689849853516,\n        repinned: true,\n        address_1: '4910 S Newport St',\n        city: 'Denver',\n        country: 'us',\n        localized_country_name: 'USA',\n        zip: '80237',\n        state: 'co'\n      },\n      group: {\n        created: 1543356603000,\n        name: 'Technology Partners Business Networking',\n        id: 30606504,\n        join_mode: 'open',\n        lat: 39.650001525878906,\n        lon: -104.9800033569336,\n        urlname: 'Technology-Partners-Business-Networking',\n        who: 'Members',\n        localized_location: 'Englewood, CO',\n        state: 'CO',\n        country: 'us',\n        region: 'en_US',\n        timezone: 'US/Mountain'\n      },\n      link: 'https://www.meetup.com/Technology-Partners-Business-Networking/events/tnvdcryzlbkc/',\n      description: '<p>Join us for lunch, introductions, and some great conversation with like-minded digital technology businesses.</p> <p>Typical Agenda:<br/>* Come early for extra networking time.<br/>* Start promptly at 12:05 - please arrive early<br/>* Introductions - Who you are and your technical specialty<br/>* Topic of the Day - This could be sharing more about our individual businesses, round table topics, or a presentation by Consortium Members.<br/>* Pass contact information - bring business cards!<br/>* End at 1:00<br/>* Stay longer and network if your schedule allows</p> <p>While we do not charge for this event, we do ask that you please make a purchase out of respect for our gracious hosts at Tap and Grill. Please let us know if you RSVP\\'d and can\\'t make it so we have a correct count for the restaurant.</p> ',\n      how_to_find_us: 'In the private room in the back!',\n      visibility: 'public',\n      member_pay_fee: false\n    },\n    {\n      created: 1548175893000,\n      duration: 10800000,\n      id: 'lsbxxqyzlbsb',\n      name: 'Pitch Lab: How To Tell A Captivating Story Like A Stand-Up Comedian!',\n      date_in_series_pattern: false,\n      status: 'upcoming',\n      time: 1565829000000,\n      local_date: '2019-08-14',\n      local_time: '18:30',\n      updated: 1563204813000,\n      utc_offset: -21600000,\n      waitlist_count: 0,\n      yes_rsvp_count: 31,\n      venue: {\n        id: 9942932,\n        name: 'Galvanize',\n        lat: 39.73353576660156,\n        lon: -104.99261474609375,\n        repinned: true,\n        address_1: '1062 Delaware Street',\n        city: 'Denver',\n        country: 'us',\n        localized_country_name: 'USA',\n        zip: '80204',\n        state: 'CO'\n      },\n      group: {\n        created: 1215822969000,\n        name: 'Refresh Denver',\n        id: 1220063,\n        join_mode: 'open',\n        lat: 39.75,\n        lon: -104.98999786376953,\n        urlname: 'refreshdenver',\n        who: 'Designers & Developers',\n        localized_location: 'Denver, CO',\n        state: 'CO',\n        country: 'us',\n        region: 'en_US',\n        timezone: 'US/Mountain'\n      },\n      link: 'https://www.meetup.com/refreshdenver/events/lsbxxqyzlbsb/',\n      description: '<p>About This Workshop</p> <p>Learn to be a more engaging storyteller using proven techniques from your favorite comedians like John Mulaney, Tig Notaro, and Dave Chappelle.</p> <p>In this workshop, we’ll dive into the essential elements of telling a great story and how to avoid common pitfalls that make most stories fall flat.</p> <p>Takeaways from the Stage</p> <p>Storytelling framework to understand why stories work and how to improve yours<br/>The importance of authenticity and vulnerability to tell better stories<br/>Why conflict is the secret sauce to keeping an audience interested</p> <p>About Your Instructor</p> <p>Jay Mays is a 20-year sales veteran and stand-up comedy producer. From his underdog beginnings in dive bars to being awarded Best Comedy Venue in Miami, Jay has produced live comedy events for some of the biggest names in entertainment including Viacom, TEDx &amp; Live Nation.</p> <p>As Managing Partner at Pitch Lab, Jay combines the seemingly disparate worlds of sales and comedy to help professionals be more confident, engaging speakers.</p> <p>Schedule<br/>6:30PM - Drinks &amp; Camaraderie<br/>7:00PM - Talk</p> ',\n      how_to_find_us: 'Follow signs for Refresh Denver once inside Galvanize Golden Triangle',\n      visibility: 'public',\n      member_pay_fee: false\n    },\n    {\n      created: 1558282350000,\n      duration: 10800000,\n      id: 'kgwncryzpbgb',\n      name: 'New & Returning Members Night',\n      date_in_series_pattern: false,\n      status: 'upcoming',\n      time: 1572915600000,\n      local_date: '2019-11-04',\n      local_time: '18:00',\n      updated: 1560896911000,\n      utc_offset: -25200000,\n      waitlist_count: 0,\n      yes_rsvp_count: 3,\n      venue: {\n        id: 9942932,\n        name: 'Galvanize',\n        lat: 39.73353576660156,\n        lon: -104.99261474609375,\n        repinned: true,\n        address_1: '1062 Delaware Street',\n        city: 'Denver',\n        country: 'us',\n        localized_country_name: 'USA',\n        zip: '80204',\n        state: 'CO'\n      },\n      group: {\n        created: 1354586857000,\n        name: 'Code for Denver',\n        id: 6104442,\n        join_mode: 'open',\n        lat: 39.72999954223633,\n        lon: -104.94999694824219,\n        urlname: 'CodeForDenver',\n        who: 'Civic Innovators',\n        localized_location: 'Denver, CO',\n        state: 'CO',\n        country: 'us',\n        region: 'en_US',\n        timezone: 'US/Mountain'\n      },\n      link: 'https://www.meetup.com/CodeForDenver/events/kgwncryzpbgb/',\n      description: '<p>New &amp; Returning Members Night is where we welcome any new members to Code for Denver and where any returning members can continue working with their team on projects.</p> <p>If you’re a new member, or curious about joining Code for Denver, there will be an onboarding session at this night. If you want to get a head start, follow our self onboarding below.</p> <p>You can learn more about Code for Denver, including our open projects, at www.codefordenver.org.<br/>∙<br/>∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙♦♦♦∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙<br/>∙<br/>CODE OF CONDUCT<br/>──────────────<br/>Code for Denver is a safe place to gather, free from harassment and everyone is welcome who embraces diversity, a culture of learning, and is respectful of others and their opinions.</p> <p>This event follows Code for Denver’s Code of Conduct, please read it before attending.</p> <p>If you have any concerns, please contact [masked]<br/>∙<br/>∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙♦♦♦∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙<br/>∙<br/>FAQ<br/>───<br/>There is a full FAQ posted on our GitHub, but here are some highlights we think are important.</p> <p>Where is Galvanize, and where do I park?<br/>--------------------------------------------------<br/>Galvanize is at 1062 Delaware St. on the corner of W 11th Ave and Delaware Street in the Golden Triangle neighborhood of Denver.</p> <p>There’s ample street parking all around, both 2 hour and metered parking should be free of charge and time limit during our meetings. Galvanize is marked by the red pin, and dark grey box.</p> <p>What do I need to bring to my first meetup?<br/>--------------------------------------------------<br/>We will have you create some accounts both on our site and for the technology we use, so a laptop or a smartphone will be useful.</p> <p>I\\'m a beginner programmer. Can I still get involved?<br/>--------------------------------------------------<br/>Yes! Many of our members have been beginning programmers who have found the environment helpful to improve their abilities while also working on real world problems and providing value.</p> <p>I\\'m not a programmer or interested in programming. Can I still get involved?<br/>--------------------------------------------------<br/>Yes! Helping solve challenges in the community takes more than programming expertise. Our brigade volunteers also have backgrounds in marketing, design, sales, facilitation, nonprofits, project management, and more. Additional perspectives and experiences are always valued and welcome.</p> <p>What is Code for Denver current working on?<br/>--------------------------------------------------<br/>We have multiple teams working on many different projects at completely different stages. You can find the list, including general descriptions, status, skills needed, and more at our Current Projects page on the website.</p> <p>Who can I contact for additional questions?<br/>--------------------------------------------------<br/>Get in touch with our organizers via our Meetup site or drop us a line at [masked]<br/>∙<br/>∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙♦♦♦∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙<br/>∙<br/>USEFUL LINKS<br/>──────────<br/>► ',\n      how_to_find_us: 'There is generally a sign pointing out which room we are in. If you can\\'t find us, ask the Galvanize front desk.',\n      visibility: 'public',\n      pro_is_email_shared: false,\n      member_pay_fee: false\n    }\n  ]\n}\n\nexport { mockData }","import React, { Component } from 'react';\nimport Event from './Event';\nimport { mockData } from '../mockData/mockData';\n\nclass EventList extends Component {\n// state = {\n//   eventsData: mockData\n// }\n  render() {\n\n    return (\n      <ul className='EventList'>\n        {this.props.events.map(event => \n        // {this.state.eventsData.events.map(event => \n\n          <li key={event.id}>\n            <Event event={event}  />\n          </li>\n        )}\n      </ul>\n    );\n  }\n  \n}\n\nexport default EventList;","import { mockData } from '../mockData/mockData';\nimport axios from 'axios'\n\nasync function getSuggestions(query) {\n  if(window.location.href.startsWith('http://localhost')) {  \n  return [\n      {\n        city: 'Denver',\n        country: 'us',\n        localized_country_name: 'USA',\n        state: 'CO',\n        name_string: 'Denver, Colorado, USA',\n        zip: '80201',\n        lat: 39.7,\n        lon: -105.08\n      },\n      {\n        city: 'Denver',\n        country: 'us',\n        localized_country_name: 'USA',\n        state: 'NC',\n        name_string: 'Denver, North Carolina, USA',\n        zip: '28037',\n        lat: 35.51,\n        lon: -81.02\n      },\n      {\n        city: 'Denver',\n        country: 'us',\n        localized_country_name: 'USA',\n        state: 'PA',\n        name_string: 'Denver, Pennsylvania, USA',\n        zip: '17517',\n        lat: 40.24,\n        lon: -76.14\n      }\n    ];\n  }\n\n  const token = await getAccessToken();\n  if (token) {\n    const url = 'https://api.meetup.com/find/locations?&sign=true&photo-host=public&query='\n    + query\n    + '&access_token' + token;\n    const result = await axios.get(url);\n    return result.data\n  }\n  return []\n}\n\nasync function getEvents(lat, lon) {\n  if (window.location.href.startsWith('http://localhost')) {\n    return mockData.events;\n  }\n\n  const token = await getAccessToken();\n  if (token) {\n    let url = 'https://api.meetup.com/find/upcoming_events?&sign=true&photo-host=public' + '&access_token=' + token;\n  \n    if (lat && lon) {\n      url += '&lat=' + lat + '&lon=' + lon;\n    } \n    const result = await axios.get(url);\n    return result.data.events\n  }\n}\n\n//ACCESS TOKEN CHECKING\nasync function getOrRenewAccessToken(type, key) {\n  let url;\n  if (type === 'get') {\n    //lambda endpoint to get token by code\n    url = 'https://ueg2lqopz6.execute-api.us-east-2.amazonaws.com/dev/api/token/' + key;\n  } else if (type === 'renew') {\n    url = 'https://ueg2lqopz6.execute-api.us-east-2.amazonaws.com/dev/api/refresh/' + key;\n  }\n//axios to get request to endpoint\nconst tokenInfo = await axios.get(url);\n\n//save tokens to localStorage together with timestamp\nlocalStorage.setItem('access_token', tokenInfo.data.access_token);\nlocalStorage.setItem('refresh_token', tokenInfo.data.refresh_token);\nlocalStorage.setItem('last_saved_time', Date.now());\n\n//return the access token\nreturn tokenInfo.data.access_token;\n}\n\n\nfunction getAccessToken() {\n  const accessToken = localStorage.getItem('access_token');\n\n  if (!accessToken) {\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = searchParams.get('code')\n\n    if (!code) {\n      window.location.href = 'https://secure.meetup.com/oauth2/authorize?client_id=337jbe8sopjh7q62t45t732omi&response_type=code&redirect_uri=https://tdnicola.github.io/meetup'\n      return null\n    }\n    return getOrRenewAccessToken('get', code);\n  }\n\n  const refreshToken = localStorage.getItem('refresh_token');\n  return getOrRenewAccessToken('renew', refreshToken);\n}\n\nexport { getSuggestions, getEvents }; ","import React, { Component } from 'react';\nimport { getSuggestions } from './api';\n \nclass CitySearch extends Component {\n  state = {\n    query: '',\n    suggestions: [],\n  }\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    this.setState({ query: value });\n    getSuggestions(value).then(suggestions => this.setState({ suggestions }));\n  }\n\n  handleItemClicked = (value, lat, lon) => {\n    this.setState({ query: value, suggestions: [] });\n    this.props.updateEvents(lat, lon)\n  }\n\n  render() {\n    return (\n        <div className='CitySearch'>\n\n          <input className='city' input='text' value={this.state.query} onChange={this.handleInputChanged} />\n          <ul className='suggestions' >\n            {this.state.suggestions.map(item =>\n              <li key={item.name_string} onClick={() => this.handleItemClicked(item.name_string, item.lat, item.lon)}>\n                {item.name_string}\n              </li>\n              )}\n\n          </ul>\n         \n        </div>\n    );\n  }\n}\n\nexport default CitySearch;","import React, { Component } from 'react';\n\nclass NumberOfEvents extends Component {\n\n    state = {\n        numberQuery: 25,\n    }\n\n    handleChange = (event) => {\n        const value = event.target.value;\n        this.setState({ numberQuery: value });\n    }\n\n    render () {\n        \n        return (\n            <div className='events'>\n                <span>Display</span>\n                <input \n                    className='eventsNumberInput'\n                    type='number'\n                    onChange={this.handleChange}\n                    value={this.state.numberQuery}\n\n                    placeholder='20'\n                />\n                <span>Events</span>\n            </div>\n        )\n    }\n}\n\nexport default NumberOfEvents","import React, { Component } from 'react';\nimport './App.css';\nimport EventList from './components/EventList';\nimport CitySearch from './components/CitySearch';\nimport Event from './components/Event';\nimport NumberOfEvents from './components/NumberOfEvents';\nimport { getEvents } from './components/api';\nimport { mockData } from './mockData/mockData'\n\n\nclass App extends Component {\n\n  state = {\n    events: []\n  }\n\nupdateEvents = (lat, lon) => {\n    getEvents(lat, lon).then(events => this.setState({ events }));\n  }\n\n  render () {\n\n    \n    return (\n      <div className='App'>\n        <CitySearch updateEvents={this.updateEvents} />\n        <EventList events={this.state.events}/>\n        {/* <Event /> */}\n        <NumberOfEvents />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}